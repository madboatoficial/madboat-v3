/**
 * üé® PERSONA THEME SYSTEM
 * Each of the 26 personas gets unique visual and linguistic identity
 * Colors, symbols, language patterns, and emotional tones
 */

import React from 'react'
import { PersonaType } from '@/types/persona'
import { LucideIcon } from 'lucide-react'
import { 
  Brain,
  Heart,
  Target,
  Sparkles,
  Shield,
  Zap,
  Compass,
  Crown,
  Gem,
  Flame,
  Star,
  Eye,
  MapPin,
  TrendingUp,
  Users,
  Award,
  Mountain,
  Lightbulb,
  Anchor,
  Rocket,
  TreePine,
  Waves,
  Sun,
  Moon,
  Wind,
  Globe
} from 'lucide-react'

export interface PersonaTheme {
  // Visual Identity
  primaryColor: string
  secondaryColor: string
  accentColor: string
  gradientFrom: string
  gradientTo: string
  symbol: LucideIcon
  
  // Linguistic Patterns
  greeting: string
  congratulations: string
  encouragement: string
  tone: 'formal' | 'casual' | 'inspiring' | 'technical' | 'warm' | 'bold'
  
  // Result Page Customization
  resultTitle: string
  impactDescription: string
  nextStepsIntro: string
  
  // Emotional Resonance
  energyLevel: 'calm' | 'moderate' | 'high' | 'intense'
  personality: string[]
}

export const PERSONA_THEMES: Record<PersonaType, PersonaTheme> = {
  [PersonaType.ANALITICO]: {
    primaryColor: 'from-blue-600 to-indigo-700',
    secondaryColor: 'from-blue-600/20 to-indigo-600/20',
    accentColor: 'text-blue-400',
    gradientFrom: 'from-blue-400',
    gradientTo: 'to-indigo-500',
    symbol: Brain,
    
    greeting: 'Dados n√£o mentem, e nem sua ess√™ncia anal√≠tica',
    congratulations: 'An√°lise conclu√≠da com precis√£o cient√≠fica',
    encouragement: 'Sua mente anal√≠tica √© sua maior ferramenta estrat√©gica',
    tone: 'technical',
    
    resultTitle: 'Sua Persona Anal√≠tica Foi Decodificada',
    impactDescription: 'Voc√™ processa informa√ß√µes de forma sistem√°tica e toma decis√µes baseadas em evid√™ncias concretas.',
    nextStepsIntro: 'Seus pr√≥ximos protocolos s√£o baseados em m√©tricas e performance',
    
    energyLevel: 'moderate',
    personality: ['L√≥gico', 'Sistem√°tico', 'Baseado em dados', 'Estrat√©gico']
  },

  [PersonaType.EMOTIVO]: {
    primaryColor: 'from-pink-600 to-rose-700',
    secondaryColor: 'from-pink-600/20 to-rose-600/20',
    accentColor: 'text-pink-400',
    gradientFrom: 'from-pink-400',
    gradientTo: 'to-rose-500',
    symbol: Heart,
    
    greeting: 'Sua autenticidade emocional √© sua for√ßa mais genu√≠na',
    congratulations: 'Sua jornada de cora√ß√£o foi revelada com sensibilidade',
    encouragement: 'Sua capacidade de conectar cora√ß√µes transforma neg√≥cios',
    tone: 'warm',
    
    resultTitle: 'Seu Cora√ß√£o Empresarial Foi Revelado',
    impactDescription: 'Voc√™ lidera com empatia e cria conex√µes genu√≠nas que geram lealdade duradoura.',
    nextStepsIntro: 'Sua jornada ser√° guiada pela autenticidade e conex√£o humana',
    
    energyLevel: 'moderate',
    personality: ['Emp√°tico', 'Aut√™ntico', 'Conectivo', 'Inspirador']
  },

  [PersonaType.PRAGMATICO]: {
    primaryColor: 'from-emerald-600 to-green-700',
    secondaryColor: 'from-emerald-600/20 to-green-600/20',
    accentColor: 'text-emerald-400',
    gradientFrom: 'from-emerald-400',
    gradientTo: 'to-green-500',
    symbol: Target,
    
    greeting: 'Objetividade e resultados definem sua ess√™ncia pr√°tica',
    congratulations: 'Identifica√ß√£o completa: foco total nos resultados',
    encouragement: 'Sua abordagem pr√°tica transforma ideias em realidade',
    tone: 'formal',
    
    resultTitle: 'Sua Efici√™ncia Estrat√©gica Foi Mapeada',
    impactDescription: 'Voc√™ transforma vis√µes em a√ß√µes concretas, priorizando sempre o que gera impacto real.',
    nextStepsIntro: 'Seus protocolos focam em execu√ß√£o e resultados mensur√°veis',
    
    energyLevel: 'high',
    personality: ['Objetivo', 'Eficiente', 'Focado', 'Realizador']
  },

  [PersonaType.CRIATIVO]: {
    primaryColor: 'from-purple-600 to-violet-700',
    secondaryColor: 'from-purple-600/20 to-violet-600/20',
    accentColor: 'text-purple-400',
    gradientFrom: 'from-purple-400',
    gradientTo: 'to-violet-500',
    symbol: Sparkles,
    
    greeting: 'Sua criatividade √© a for√ßa que rompe todas as barreiras',
    congratulations: 'Sua ess√™ncia criativa foi capturada em toda sua magnitude',
    encouragement: 'Sua originalidade √© a diferencia√ß√£o que o mercado procura',
    tone: 'inspiring',
    
    resultTitle: 'Seu DNA Criativo Foi Destravado',
    impactDescription: 'Voc√™ v√™ possibilidades onde outros veem limita√ß√µes, criando solu√ß√µes inovadoras e √∫nicas.',
    nextStepsIntro: 'Sua jornada ser√° uma explos√£o de criatividade estrat√©gica',
    
    energyLevel: 'intense',
    personality: ['Inovador', 'Vision√°rio', 'Original', 'Disruptivo']
  },

  [PersonaType.INSEGURO]: {
    primaryColor: 'from-amber-600 to-orange-700',
    secondaryColor: 'from-amber-600/20 to-orange-600/20',
    accentColor: 'text-amber-400',
    gradientFrom: 'from-amber-400',
    gradientTo: 'to-orange-500',
    symbol: Shield,
    
    greeting: 'Sua cautela √© sabedoria, sua prud√™ncia √© for√ßa',
    congratulations: 'Sua jornada de autoconhecimento foi corajosamente completada',
    encouragement: 'Sua reflex√£o profunda gera decis√µes mais s√≥lidas',
    tone: 'warm',
    
    resultTitle: 'Sua Fortaleza Interior Foi Descoberta',
    impactDescription: 'Voc√™ analisa cuidadosamente cada movimento, construindo bases s√≥lidas para crescimento sustent√°vel.',
    nextStepsIntro: 'Sua evolu√ß√£o ser√° gradual, consistente e profundamente enraizada',
    
    energyLevel: 'calm',
    personality: ['Reflexivo', 'Prudente', 'Cuidadoso', 'Profundo']
  }
}

export function getPersonaTheme(persona: PersonaType): PersonaTheme {
  return PERSONA_THEMES[persona] || PERSONA_THEMES[PersonaType.ANALITICO]
}

export function getPersonaSymbol(persona: PersonaType, size = 'w-8 h-8'): JSX.Element {
  const theme = getPersonaTheme(persona)
  const Symbol = theme.symbol
  return React.createElement(Symbol, { className: `${size} ${theme.accentColor}` })
}

export function getPersonaGradient(persona: PersonaType): string {
  const theme = getPersonaTheme(persona)
  return `bg-gradient-to-br ${theme.primaryColor}`
}

export function getPersonaAccent(persona: PersonaType): string {
  const theme = getPersonaTheme(persona)
  return theme.accentColor
}