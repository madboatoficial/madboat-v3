-- ⚓ Poseidon's Database Cleanup and Admin Creation
-- Agent: Poseidon
-- Task: Clean database and create admin user for Captain Sandro
-- Created: 2025-09-14
-- Purpose: Complete database reset and admin user creation for development

-- =============================================================================
-- PHASE 1: DATABASE CLEANUP (Remove all existing user data)
-- =============================================================================

-- Step 1: Clean user profiles (must come first due to foreign key constraints)
DELETE FROM public.user_profiles;

-- Step 2: Clean custom users table
DELETE FROM public.users;

-- Step 3: Clean Supabase auth users (this will need special handling)
-- Note: auth.users cleanup should be done via Supabase Auth Admin API
-- For now, we'll document this step for manual execution

-- =============================================================================
-- PHASE 2: CREATE ADMIN USER IN CUSTOM TABLES
-- =============================================================================

-- Step 1: Create admin user in public.users table
-- Note: We'll use a specific UUID that we can reference later
-- This will be synced with auth.users after creating the Supabase user

INSERT INTO public.users (
    user_id,
    email,
    full_name,
    status,
    auth_provider,
    email_verified_at,
    created_at,
    updated_at
) VALUES (
    '00000000-0000-0000-0000-000000000001'::UUID, -- Specific UUID for admin
    'sandro@madboat.com',
    'Captain Sandro Fidelis',
    'ACTIVE',
    'email',
    now(),
    now(),
    now()
) ON CONFLICT (email) DO UPDATE SET
    full_name = EXCLUDED.full_name,
    status = EXCLUDED.status,
    email_verified_at = EXCLUDED.email_verified_at,
    updated_at = now();

-- Step 2: Create admin profile
INSERT INTO public.user_profiles (
    user_id,
    avatar_url,
    bio,
    timezone,
    language,
    onboarding_completed,
    persona_identified,
    alma_phase_current,
    privacy_analytics,
    created_at,
    updated_at
) VALUES (
    '00000000-0000-0000-0000-000000000001'::UUID,
    'https://github.com/sandrofidelis.png', -- GitHub avatar
    'Captain and Founder of MadBoat - Navigating the digital seas of innovation',
    'America/Sao_Paulo',
    'pt-BR',
    true, -- Admin has completed onboarding
    true, -- Admin persona is identified
    'expansao', -- Advanced phase for admin
    true,
    now(),
    now()
) ON CONFLICT (user_id) DO UPDATE SET
    avatar_url = EXCLUDED.avatar_url,
    bio = EXCLUDED.bio,
    onboarding_completed = EXCLUDED.onboarding_completed,
    persona_identified = EXCLUDED.persona_identified,
    alma_phase_current = EXCLUDED.alma_phase_current,
    updated_at = now();

-- =============================================================================
-- PHASE 3: VERIFICATION QUERIES
-- =============================================================================

-- Verify user creation
SELECT
    user_id,
    email,
    full_name,
    status,
    created_at
FROM public.users
WHERE email = 'sandro@madboat.com';

-- Verify profile creation
SELECT
    user_id,
    bio,
    onboarding_completed,
    persona_identified,
    alma_phase_current
FROM public.user_profiles
WHERE user_id = '00000000-0000-0000-0000-000000000001';

-- Count total users (should be 1)
SELECT COUNT(*) as total_users FROM public.users;

-- Count total profiles (should be 1)
SELECT COUNT(*) as total_profiles FROM public.user_profiles;

-- =============================================================================
-- NOTES FOR MANUAL SUPABASE AUTH SETUP
-- =============================================================================

-- IMPORTANT: After running this migration, you must:
-- 1. Go to Supabase Dashboard > Authentication > Users
-- 2. Delete any existing users manually
-- 3. Create new user with:
--    - Email: sandro@madboat.com
--    - Password: 123456
--    - User ID: 00000000-0000-0000-0000-000000000001 (if possible to set)
--    - Email confirmed: Yes
-- 4. If you can't set the specific UUID, update the public.users and user_profiles
--    tables with the actual UUID generated by Supabase Auth

-- Victory! The database has been cleansed and the Captain's throne prepared! ⚓